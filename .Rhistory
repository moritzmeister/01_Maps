?read.csv
setwd("~/")
x <- read.csv("Ketten.csv", header = T, sep = ",")
View(x)
install.packages("MASS")
library(MASS)
library("MASS", lib.loc="~/R/win-library/3.2")
parcoordx, col=rainbow(length(x[,1])), var.label=T)
parcoord(x, col=rainbow(length(x[,1])), var.label=T)
parcoord(x[,3:13], col=rainbow(length(x[,1])), var.label=T)
parcoord(x[,3:7], col=rainbow(length(x[,1])), var.label=T)
# install devtools
install.packages("devtools")
# load devtools
library(devtools)
# install arcdiagram
install_github('arcdiagram', username='gastonstat')
# load arcdiagram
library(arcdiagram)
library(maptools); library(gpclib); #library(sp);
install.packages("gpclib")
library(maptools); library(gpclib); #library(sp);
gpclibPermit()
shapefile <- readShapeSpatial('CHE_adm0.shp')
setwd("C:/Projekte/Pfister/01_Maps")
shapefile <- readShapeSpatial('CHE_adm0.shp')
data <- fortify(shapefile)
?fortify
??fortify
library(ggplot2)
data <- fortify(shapefile)
qmap('texas', zoom = 6, maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
?qmap
??qmap
install.packages("qmap")
library(qmap)
qmap('texas', zoom = 6, maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
install.packages("ggmap")
install.packages("ggmap")
qmap('texas', zoom = 6, maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
library(maptools); library(gpclib); #library(sp);
gpclibPermit()
library(qmap)
qmap('texas', zoom = 6, maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
install.packages("get_map")
qmap('switzerland', zoom = 6, maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
qmap(maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
library("MASS", lib.loc="~/R/win-library/3.2")
library("MASS", lib.loc="C:/Program Files/R/R-3.2.3/library")
library(sp)
library(ggplot2)
library(maptools); library(gpclib); #library(sp);
library(qmap)
qmap(maptype ='satellite') +
geom_polygon(aes(x = long, y = lat, group = group), data = data,
colour ='white', fill ='black', alpha = .4, size = .3)
plot(ch3)
ch3 <- readRDS("CHE_adm3.rds")
plot(ch3)
head(ch3, n = 2)
head(ch2, n = 2)
ch2 <- readRDS("CHE_adm2.rds")
head(ch2, n = 2)
plot(ch2)
plot(ch2@data)
plot(ch2)
read.csv("out_plz_einw_koord.csv", header = TRUE, sep = ";", quote = "\"", dec = ".")
plzdata <- read.csv("out_plz_einw_koord.csv", header = TRUE, sep = ";", quote = "\"", dec = ".")
View(plzdata)
summary(ch2)
View(data)
e
plzdata <- read.csv("out_plz_einw_koord.csv", header = TRUE, sep = ";", quote = "\"", dec = ".")
map <- readRDS("CHE_adm0.rds")
ch1 <- readRDS("CHE_adm1.rds")
ch2 <- readRDS("CHE_adm2.rds")
ch3 <- readRDS("CHE_adm3.rds")
plot(ch2)
summary(ch2)
View(plzdata)
mat <- as.matrix(plzdata[,12:13])
View(mat)
sp1 <- SpatialPoints(coords = mat)
plot(sp1)
plot(sp1, zoom = 6)
spdf1 <- SpatialPointsDataFrame(sp1, data = plzdata[,8])
mat <- as.matrix(plzdata)
sp1 <- SpatialPoints(coords = mat)
mat <- as.matrix(plzdata[,12:13])
sp1 <- SpatialPoints(coords = mat)
spdf1 <- SpatialPointsDataFrame(sp1, data = cbind(plzdata[,12:13], plzdata[,8]))
plot(spdf1)
install.packages("rgdal")
library(r)
library(rgdal)
install.packages("dplyr")
library(dplyr)
plot(ch2@data)
ch2@data
left_join(ch2, cbind(plzdata[,12:13], plzdata[,8]))
install.packages("tmap")
library(tmap)
qtm(ch1)
qtm(ch2)
head(ch2, n = 2)
ggplot(ch2)
ggplot(ch2) +  geom_polygon(data=ch2, aes(x=long, y=lat, group=group))
qtm(ch2) + geom_point(data=plzdata[,12:13], aes(x=Longitude, y=Latitude), color="red")
plot(ch2)
plot(ch2) + geom_point(data=plzdata[,12:13], aes(x=Longitude, y=Latitude), color="red")
plot(ch2) + geom_point(data=plzdata[,12:13], aes(x=longitude, y=latitude), color="red")
qtm(ch2)
?qtm
qtm(ch2, sp1)
?qtm
install.pa
install.packages("rgeos")
install.packages("rgeos")
qtm(ch2)
library(sp)
library(ggplot2)
library(rgdal)
library(dplyr)
library(tmap)
qtm(ch2)
head(ch2, n = 2)
ch2@data@NAME_1
ch2.data@NAME_1
ch2Qdata
ch2@data
ch2@data[,"NAME_1"]
ch2@data[,"NAME_2"]
ch3@data[,"NAME_3"]
con <- url("http://gadm.org/data/rda/CHE_adm1.RData")
print(load(con))
language <- c("german", "german", "german","german",
"german","german","french", "french",
"german","german","french", "french",
"german", "french","german","german",
"german","german","german", "german",
"german","italian","german","french",
"french","german","german")
gadm$language <- as.factor(language)
col = rainbow(length(levels(gadm$language)))
spplot(ch1, "language", col.regions=col, main="Swiss Language Regions")
ch1$language <- as.factor(language)
language <- c("german", "german", "german","german",
"german","german","french", "french",
"german","german","french", "french",
"german", "french","german","german",
"german","german","german", "german",
"german","italian","german","french",
"french","german","german", "german")
ch1$language <- as.factor(language)
col = rainbow(length(levels(ch1$language)))
spplot(ch1, "language", col.regions=col, main="Swiss Language Regions")
language <- c("german", "german", "german","german",
"german","german","french", "french",
"german","german","french", "french",
"german","german","german", "german",
"german", "french","german","german",
"german","italian","german","french",
"french","german")
ch1$language <- as.factor(language)
col = rainbow(length(levels(ch1$language)))
spplot(ch1, "language", col.regions=col, main="Swiss Language Regions")
?require
ch3@data[,"ID_3"]
head(ch2, n = 2)
tapply(plzdata[,7])
sapply(plzdata[,7])
sapply(plzdata[,7], mean(plzdata[,8]))
?
?sapply
tapply(plzdata, plzdata[,8], mean(plzdata[,8]))
tapply(plzdata, plzdata[,8], sum(plzdata[,8]))
?sum
tapply(plzdata, plzdata$BEZIRK_BEZ, sum(plzdata$ANZ_PERSONEN))
tapply(plzdata, plzdata$BEZIRK_BEZ, sum(ANZ_PERSONEN))
by(plzdata[,8], factor(plzdata$BEZIRK_BEZ), sum)
by(plzdata[,8], plzdata$BEZIRK_BEZ, sum)
tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum)
as.data.frame(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum))
as.matrix(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum))
as.table(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum))
as.data.fram(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum))
as.data.frame(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum))
length(as.data.frame(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum)))
summary(as.data.frame(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum)))
count(as.data.frame(tapply(plzdata[,8], plzdata$BEZIRK_BEZ, sum)))
count(as.data.frame(tapply(plzdata[,8], plzdata$KANTON, sum)))
qtm(ch1)
'CH.'+plzdata$KANTON
'CH.'+ string(plzdata$KANTON)
'CH.'+ chr(plzdata$KANTON)
'CH.'+ char(plzdata$KANTON)
'CH.'+ as.character(plzdata$KANTON)
plzdata <- data.frame(lapply(plzdata, as.character), stringsAsFactors=FALSE)
'CH.'+ plzdata$KANTON
"CH."+ plzdata$KANTON
c("CH.", plzdata$KANTON)
?paste
paste("CH.", plzdata$KANTON)
paste("CH.", plzdata$KANTON, sep = "")
as.data.frame(tapply(plzdata[,8], plzdata$KANTON, sum))
as.data.frame(tapply(plzdata[,8], as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
as.factor(paste("CH.", plzdata$KANTON, sep = ""))
tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum)
as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
test <- as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
test <- as.data.frame(by(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
test <- by(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum)
test <- apply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum)
test <- sapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum)
test <- aggregate(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum)
test <- tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum)
test <- as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
View(test)
test$names <- rownames(test)
View(test)
install.packages("plyr")
install.packages("plyr")
library(plyr)
library(plyr)
install.packages("plyr")
library(plyr)
rename(test, c("Summe","HASC_1"))
colnames(test) <- c("Summe","HASC_1")
View(test)
ch1@data <-left_join(ch1@data, test)
library(dplyr)
library(tmap)
ch1@data <-left_join(ch1@data, test)
qtm(ch1, "Summe")
ggplot(ch2) +  geom_polygon(data=ch2, aes(x=long, y=lat, group=group))
library(ggplot2)
ggplot(ch2) +  geom_polygon(data=ch2, aes(x=long, y=lat, group=group))
qtm(ch1, "Summe")
?qtm
qtm(ch1, "Summe", fill.n = 10)
qtm(ch1, "Summe", fill.n = 100)
qtm(ch1, "Summe", fill.n = 26)
qtm(ch1, "Summe", fill.n = 10)
qtm(ch1, "Summe", fill.n = 15)
qtm(ch1, "Summe", fill.n = 5)
?qtm
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont")
plot(ch2)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont")
tapply(as.numeric(plzdata[,8]), as.factor(plzdata$ORT), sum)
count(as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(plzdata$ORT), sum)))
plot(ch1, col = red(test$Summe))
plot(ch1, col = gray(test$Summe))
plot(ch1, col = gray(test$Summe/max(test$Summe)))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont")
deu0 <- readRDS("DEU_adm0.rds")
plot(deu0)
map <- readRDS("CHE_adm0.rds")
plot(map)
plzdata <- read.csv("out_plz_einw_koord.csv", header = TRUE, sep = ";", quote = "\"", dec = ".")
map <- readRDS("CHE_adm0.rds")
ch1 <- readRDS("CHE_adm1.rds")
ch2 <- readRDS("CHE_adm2.rds")
ch3 <- readRDS("CHE_adm3.rds")
#convert plz data to char type
plzdata <- data.frame(lapply(plzdata, as.character), stringsAsFactors=FALSE)
#aggregate plz data to Kanton Level
test <- as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(paste("CH.", plzdata$KANTON, sep = "")), sum))
test$names <- rownames(test)
colnames(test) <- c("Summe","HASC_1")
#count kantons
count(as.data.frame(tapply(as.numeric(plzdata[,8]), as.factor(plzdata$ORT), sum)))
#join kpi to spatial data
ch1@data <-left_join(ch1@data, test)
#plot
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont")
?left_join
?qtm
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.col = "red")
red
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.col = red)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.col = 1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.col = 2)
?qtm
RColorBrewer::display.brewer.all()
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "WhOrRd")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "YlOrRd")
RColorBrewer::display.brewer.all()
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Reds")
RColorBrewer::display.brewer.all()
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Greys")
RColorBrewer::display.brewer.all()
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Greens")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues")
shops <- read.csv("out_filialen_lat_long.csv", header = TRUE, sep = ";", quote = "\"", dec = ".")
View(shops)
qtm(shops)
mat <- as.matrix(shops)
sp1 <- SpatialPoints(coords = mat)
View(mat)
sp1 <- SpatialPoints(coords = mat[,2:3])
mat <- as.matrix(plzdata[,12:13])
sp1 <- SpatialPoints(coords = mat)
spdf1 <- SpatialPointsDataFrame(sp1, data = cbind(plzdata[,12:13], plzdata[,8]))
mat <- as.matrix(plzdata[,12:13])
sp1 <- SpatialPoints(coords = mat)
View(mat)
mat <- as.matrix(as.numeric(shops))
sp1 <- SpatialPoints(coords = as.numeric(mat[,2:3]))
mat[,2:3]
mat <- as.matrix(shops)
mat[,2:3]
colnames(mat) <- c("Longitude", "Latitude")
colnames(mat) <- c("Shop", "Longitude", "Latitude")
sp1 <- SpatialPoints(coords = as.numeric(mat[,2:3]))
?spatialpo
?spatialpoints
?SpatialPoints
pts = cbind(1:5, 1:5)
View(pts)
dimnames(pts)[[1]] = letters[1:5]
View(pts)
df = data.frame(a = 1:5)
View(df)
row.names(df) = letters[5:1]
View(df)
library(sp)
mat <- as.matrix(shops)
colnames(mat) <- c("Shop", "Longitude", "Latitude")
sp1 <- SpatialPoints(coords = as.numeric(mat[,2:3]))
mat <- as.matrix(shops[,2:3])
sp1 <- SpatialPoints(coords = mat)
qtm(sp1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
View(shops)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, col = "Red")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, fill.col = "Red")
sp1 <- SpatialPointsDataF(coords = mat)
View(mat)
colnames(mat) <- c("Longitude", "Latitude")
sp1 <- SpatialPointsDataFrame(coords = mat )
sp1 <- SpatialPointsDataFrame(coords = mat, shops[,1])
sp1 <- SpatialPointsDataFrame(coords = mat, as.factor(shops[,1]))
sp1 <- SpatialPointsDataFrame(coords = mat, as.data.frame(shops[,1]))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
colnames(mat) <- c("Longitude", "Latitude")
sp1 <- SpatialPointsDataFrame(coords = mat, as.data.frame(shops[,1]))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
?SpatialPointsDataFrame
sp1 <- SpatialPointsDataFrame(coords = mat, as.data.frame(shops[,1]),proj4string=CRS(as.character(NA)))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
proj4string(mat) <- NA_character_
??proj4string
install.packages("projection")
install.packages("raster")
install.packages("raster")
library(sp)
library(ggplot2)
library(plyr)
library(rgdal)
library(dplyr)
library(tmap)
library(raster)
proj4string(mat) <- NA_character_
proj4string(lnd) <-CRS("+init=epsg:27700")
proj4string(mat) <-CRS("+init=epsg:27700")
proj4string(sp1) <-CRS("+init=epsg:27700")
EPSG <- make_EPSG()
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
sp1 <- SpatialPointsDataFrame(coords = mat, as.data.frame(shops[,1]),proj4string=CRS(as.character(NA)))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
View(shops)
mat <- as.matrix(shops[,2:3])
colnames(mat) <- c("Longitude", "Latitude")
proj4string(mat) <- NA_character_
proj4string(sp1) <- NA_character_
proj4string(sp1) <-CRS("+init=epsg:27700")
EPSG[grepl("WGS 84$", EPSG$note),]
sp84 <- spTransform(sp1, CRS("+init=epsg:4326"))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp84)
sp1 <- SpatialPointsDataFrame(coords = mat, as.data.frame(shops[,1]),proj4string=CRS(as.character(NA)))
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp84)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + plot(sp1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + ggplot(sp1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qplot(sp1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1)
?qtm
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 10)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 3)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 1, title = sp1$`shops[, 1]`)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 1, title = sp1$shops[, 1])
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Darkred", bubble.size = 1, title = assp1$shops[, 1])
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Darkred", bubble.size = 1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 1)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 1) + qtm(sp1, bubble.col = "Black", bubble.size = 0.5)
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 1) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.7) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Darkred", bubble.size = 0.7) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.6) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Black", bubble.size = 0.6, bubble.border.col ="Red") #+ qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Black", bubble.size = 0.6) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.6) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.6, bubbles.labels = sp1$shops[, 1]) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.6, title = sp1$shops[, 1]) + qtm(sp1, bubble.col = "Black")
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.6, title = as.character(sp1$shops[, 1])) + qtm(sp1, bubble.col = "Black")
RColorBrewer::display.brewer.all()
display.brewer.all()
qtm(ch1, "Summe", fill.n = 5, fill.style = "cont", fill.palette = "Blues") + qtm(sp1, bubble.col = "Red", bubble.size = 0.6, title = as.character(sp1$shops[, 1])) + qtm(sp1, bubble.col = "Black")
